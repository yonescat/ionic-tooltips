/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./tooltip-box.component";
var styles_TooltipBox = ["[_nghost-%COMP%] {\n              background-color: rgba(0, 0, 0, 0.8);\n              color: white;\n              display: inline-block;\n              position: fixed;\n              padding: 15px 25px;\n              font-size: 15px;\n          }", ".has-arrow[_nghost-%COMP%]:before {\n              content: '';\n              border: 5px solid transparent;\n              position: absolute;\n              width: 0;\n              height: 0;\n          }", ".has-arrow.arrow-top[_nghost-%COMP%]:before { border-bottom: 5px solid rgba(0,0,0,0.8); top: -10px; }", ".has-arrow.arrow-left[_nghost-%COMP%]:before { border-right: 5px solid rgba(0,0,0,0.8); left: -10px; }", ".has-arrow.arrow-right[_nghost-%COMP%]:before { border-left: 5px solid rgba(0,0,0,0.8); right: -10px; }", ".has-arrow.arrow-bottom[_nghost-%COMP%]:before { border-top: 5px solid rgba(0,0,0,0.8); bottom: -10px; }"];
var RenderType_TooltipBox = i0.ɵcrt({ encapsulation: 0, styles: styles_TooltipBox, data: { "animation": [{ type: 7, name: "fade", definitions: [{ type: 0, name: "visible", styles: { type: 6, styles: { opacity: 1 }, offset: null }, options: undefined }, { type: 0, name: "invisible", styles: { type: 6, styles: { opacity: 0 }, offset: null }, options: undefined }, { type: 1, expr: "visible <=> invisible", animation: { type: 4, styles: null, timings: "300ms linear" }, options: null }], options: {} }] } });
export { RenderType_TooltipBox as RenderType_TooltipBox };
function View_TooltipBox_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "div", [], [[8, "innerHTML", 1]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.tooltipHtml; _ck(_v, 0, 0, currVal_0); }); }
function View_TooltipBox_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.text; _ck(_v, 0, 0, currVal_0); }); }
export function View_TooltipBox_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵted(-1, null, ["\n    "])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TooltipBox_1)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"], ngIfElse: [1, "ngIfElse"] }, null), (_l()(), i0.ɵted(-1, null, ["\n    "])), (_l()(), i0.ɵand(0, [["txt", 2]], null, 0, null, View_TooltipBox_2)), (_l()(), i0.ɵted(-1, null, ["\n  "]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.tooltipHtml; var currVal_1 = i0.ɵnov(_v, 4); _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }
export function View_TooltipBox_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "tooltip-box", [], [[40, "@fade", 0]], null, null, View_TooltipBox_0, RenderType_TooltipBox)), i0.ɵdid(1, 4243456, null, 0, i2.TooltipBox, [i0.ElementRef, i0.Renderer2], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).fadeState; _ck(_v, 0, 0, currVal_0); }); }
var TooltipBoxNgFactory = i0.ɵccf("tooltip-box", i2.TooltipBox, View_TooltipBox_Host_0, { text: "text", tooltipHtml: "tooltipHtml", arrow: "arrow", posTop: "posTop", posLeft: "posLeft" }, {}, []);
export { TooltipBoxNgFactory as TooltipBoxNgFactory };
//# sourceMappingURL=tooltip-box.component.ngfactory.js.map